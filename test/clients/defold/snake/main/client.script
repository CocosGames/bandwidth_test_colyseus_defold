local Colyseus = require "colyseus.client"

local client
local xroom
local players = {}

function init(self)

	client = Colyseus.new("ws://localhost:2567")
	joinRoom()
end

function final(self)
	-- Add finalization code here
	-- Remove this function if not needed
	msg.post(".", "release_input_focus")
end

function update(self, dt)
	-- Add update code here
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	print(message_id)
	pprint(message)
	if message_id == hash("selected") then
		if message.role == "player" then
			joinRoom("player")
		else
			joinRoom("audience")
		end
	end

end

function joinRoom()
	if not client then return end
	client:join_or_create("my_room", function(err, room)
		if (err) then
			print("JOIN ERROR: " .. err)
			return
		end
		xroom = room;
		room:on("statechange", function(state)
			updatePlayers(state)
		end
	)
	print("successfully joined '" .. room.name .. "'")
end)
end

function updatePlayers(s)
	for k, v in pairs(s.players) do
		if v[1] ~= nil then
			--pprint(s.players[v[1]].x)
			go.set_position(vmath.vector3(s.players[v[1]].x,s.players[v[1]].y,0),hash("/go"))
		end
	end
end

function on_input(self, action_id, action)

end
